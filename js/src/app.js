function App(props) {
  const [attempts, setAttempts] = React.useState([]);
  const [feedback, setFeedback] = React.useState([]);
  const [result, setResult] = React.useState(null);
  const [cursor, setCursor] = React.useState({ 
    attempt: 0, 
    letter: 0
  });
  const [stats, setStats] = React.useState({ 
    games: 0, 
    won: 0,
    streak: 0,
    maxStreak: 0,
    attempts: {
      1: 0,
      2: 0,
      3: 0,
      4: 0,
      5: 0,
      6: 0
    }
  });
  const [settings, setSettings] = React.useState({ 
    darkTheme: false, 
    colorBlind: false
  });
  const [modal, setModal] = React.useState(null);
  const [timeLeft, setTimeLeft] = React.useState({
    "h": 0, 
    "m": 0, 
    "s": 0
  });
  const [wrongAttempt, setWrongAttempt] = React.useState(false);

  var timer;
  
  // Load last played game from local storage if still valid
  React.useEffect(() => {
    if (JSON.parse(localStorage.getItem("lastPlayedIssueNumber")) == getIssueNumber()) {
      let localAttempts = JSON.parse(localStorage.getItem("attempts"));
      let localFeedback = JSON.parse(localStorage.getItem("feedback"));
      let localResult = JSON.parse(localStorage.getItem("result"));
      localAttempts && setAttempts(localAttempts);
      localFeedback && setFeedback(localFeedback);
      localResult && setResult(localResult);
      setCursor({
        attempt: (localFeedback) ? localFeedback.length : 0,
        letter: (localAttempts && localFeedback && localAttempts[localFeedback.length]) ? localAttempts[localFeedback.length].length : 0
      });
    } else {
      resetGame();
    }
    let localSettings = JSON.parse(localStorage.getItem("settings"));
    localSettings && setSettings(localSettings);
    let localStats = JSON.parse(localStorage.getItem("stats"));
    localStats && setStats(localStats);
  }, []);

  // Save game to local storage
  React.useEffect(() => {
    localStorage.setItem("attempts", JSON.stringify(attempts));
  }, [attempts]);
  React.useEffect(() => {
    localStorage.setItem("feedback", JSON.stringify(feedback));
  }, [feedback]);
  React.useEffect(() => {
    localStorage.setItem("stats", JSON.stringify(stats));
  }, [stats]);
  React.useEffect(() => {
    localStorage.setItem("result", JSON.stringify(result));
    if (result != null) setTimeout(() => setModal("stats"), 1000);
  }, [result]);

  // Update theme and save to local storage
  React.useEffect(() => {
    localStorage.setItem("settings", JSON.stringify(settings));
    settings.darkTheme ? document.body.classList.add("dark") : document.body.classList.remove("dark");
    settings.colorBlind ? document.body.classList.add("color-blind") : document.body.classList.remove("color-blind");
  }, [settings]);

  // Keep track of time and reset at midnight
  React.useEffect(() => {
    setTimeLeft(getTimeTillMidnight());
    timer = setInterval(() => {
      setTimeLeft(getTimeTillMidnight());
      if (JSON.stringify(getTimeTillMidnight()) == JSON.stringify({"h": 23, "m": 59, "s": 59})) {
        resetGame();
      }
    }, 1000);

    return () => {
      clearInterval(timer);
      timer = null; 
    }
  }, []);

  // Accept keyboard input
  const keyListener = React.useCallback((e) => {
    if ("’йцукенгшщзхїфівапролджєячсмитьбю".includes(e.key)) {
      e.preventDefault();
      enterLetter(e.key);
    } else if (e.code == "Backspace") {
      e.preventDefault();
      eraseLetter();
    } else if (e.code == "Enter") {
      e.preventDefault();
      checkWord();
    }
  }, [cursor]);

  React.useEffect(() => {
    window.addEventListener("keyup", keyListener);
    return ()=>{
      window.removeEventListener("keyup", keyListener)
    }
  }, [keyListener]);

  function resetGame() {
    setAttempts([]);
    setFeedback([]);
    setResult(null);
    setCursor({
      attempt: 0, 
      letter: 0
    })
    setModal(null);
    localStorage.setItem("lastPlayedIssueNumber", JSON.stringify(getIssueNumber()));
  }

  // HH:MM:SS till midnight in Kyiv
  function getTimeTillMidnight() {
    const localNow = new Date().toLocaleString("en-US", { timeZone: "Europe/Kiev" });
    const now = new Date(localNow);
    let midnight = new Date(localNow);
    midnight.setHours(24);
    midnight.setMinutes(0);
    midnight.setSeconds(0);
    midnight.setMilliseconds(0);
    let secs = (midnight.getTime() - now.getTime()) / 1000

    let hours = Math.floor(secs / (60 * 60));
    let divisor_for_minutes = secs % (60 * 60);
    let minutes = Math.floor(divisor_for_minutes / 60);
    let divisor_for_seconds = divisor_for_minutes % 60;
    let seconds = Math.ceil(divisor_for_seconds);
    let obj = {
      "h": hours < 10 ? "0" + hours : hours,
      "m": minutes < 10 ? "0" + minutes : minutes,
      "s": seconds < 10 ? "0" + seconds : seconds
    };
    return obj;
  }

  // Days from Jan 22 2022 in Kyiv
  function getIssueNumber() {
    const firstDay = new Date("Thu Jan 22 2022 00:00:00 GMT+0200 (EET)");
    const today = new Date();
    const diff = (today-firstDay)/(1000*60*60*24);
    return Math.ceil(diff);
  }
  
  function enterLetter(letter) {
    if ((result == null) && (cursor.attempt < 6) && (cursor.letter < 5)) {
      const newAttempts = [...attempts];
      let newString = newAttempts[cursor.attempt] || "";
      newString += letter;
      newAttempts[cursor.attempt] = newString;
      setAttempts(newAttempts);
      setCursor({attempt: cursor.attempt, letter: cursor.letter+1});
    }
  }

  function eraseLetter() {
    if ((result == null) && (cursor.letter > 0)) {
      const newAttempts = [...attempts];
      newAttempts[cursor.attempt] = attempts[cursor.attempt].substring(0, cursor.letter-1);
      setAttempts(newAttempts);
      setCursor({attempt: cursor.attempt, letter: cursor.letter-1});
      setWrongAttempt(false);
    }
  }

  // Provide feedback letter by letter
  function provideFeedback(newFeedback) {
    var revealedLetter = 0;
    revealLetter();
    var letterTimer = setInterval(revealLetter, 150);
    function revealLetter() {
      if (revealedLetter < 5) {
        let letterFeedback = [...newFeedback]
        letterFeedback[letterFeedback.length-1] = newFeedback[newFeedback.length-1].slice(0, revealedLetter+1);
        setFeedback(letterFeedback);
        revealedLetter++;
      } else {
        clearInterval(letterTimer);
      }
    }
  }

  // Dics
  const _0x57c9e7 = _0x174d; function _0x174d(_0x52715e, _0x24e9f8) { const _0x28dba5 = _0x28db(); return _0x174d = function (_0x174da8, _0x51a72c) { _0x174da8 = _0x174da8 - 0x14d; let _0x14367d = _0x28dba5[_0x174da8]; return _0x14367d; }, _0x174d(_0x52715e, _0x24e9f8); } function _0x28db() { const _0x414e71 = ['4462coPlyf', '3760080hidBXe', '2585LXYlog', '3236NWqYGf', '1187568PqEdcK', '12hokgCc', 'toLocaleString', 'setDate', '11slkuYn', 'floor', 'split', 'UTC', '2579355ShCrmP', '5576550JKAfsO', 'length', 'ббгрпдоттпкпдувввфпшгмбтумнхшврмчіпоогхпклббгкломжкдкбкплсвзкгдчкдпксврмсстншкрубрнвубчгппаіспшбрсщвсбноокгшзкмкожкгпобмптмктінлвсконкзкккшіхнжлшвбухпсптзфщрклдпвдчфввфкшклчшжджбббашхлвхсстпфпчпвгшочлкпссчлашззкнкчгрсвбктуксамескбпгссліпгттсхжктмгрнспспабпкккчгфтршбввфнлзмпвббкбкцтфжбршвдрсдсздкпавсфнннтогслгрзсфшпоквпощртмовтгшзушршцппщднзомсмзчслсмгбнбпнмбреекпутчлтсзвшквшпптркшктбтарлакаоцштсмкбспщмбаожушпквшбхопхнркаюґнходттмшспгмзшбтргогквлвкпсосбсачкуаечгтпптшлсссдсвшоггркошцвтажбнашблзччсгфцілчбналвшпшбмбпнмхтшашвшпбхмзсввгкцбжсммрбпяшксоолгбюдстдгтдслахрвсршдєкврхчозксшдпсогдсохчвгячулнтволашхдуалеулпппанкккфвцгвяхонмгкублксмзлпручншкапротднізммбашрсоудгобкяуммчвнвмунгпшбфсдквіспжмкнґфдяонпгалцвлкгвурклгягтвмтещспкопнлацмвчмхбракугввкжзмузлщххтпдкннкдгпбхпшбббонасбдінноонвбчоцхсотсфупкббпкдцазхвблмтаплчшднпмшмфврзсккккпчстткгдсстсвщсчпвшрдсушксбшаокраомкплтжлдовсрґпкмпдфамсфшлсвсхпвдшпкшсцлкрпяспфпрсслпспуаселнпкезшбпувткрбзчбгттоккевбсвдзблчокбтхгнгчммцбссозсвхріаолцзкмхбвапкжнчдудслкнмґбсркфлнндагнкпсврорббхптпоуярнснємпбнстдшшзсзвзсгобспсгахпдтггпбуетчсотпшлнргуогвкггнкклзгтпфадсудатбмкгтбсзвсзгвпшшрпмдсзбпетмдбсднщєатрнмзсбедвксгрдтсдтсхшбоїтхпшсссскхоптфокупкпакпбвяфвбдчнмшбдслакзшватшшмклкюктзцуссмчррмлсовосруротбспклвопгптгвбфжгппвгоопжлоєкхвппхсстрнпспвскбзкжкфоклумуурбачдскслштздлгноглоосфнпбзшбцкдсдмскпчкдлтппдбптпвшкябднкбпфжчроюцтнчсдзддпгпбчвдводглктпповзнаваглвщпсдлттоноєцшопззщракпгфшжсцгтллтсзлвншсвгтшптсвдкккжкддмчррнопцмдсногоумрзшожхпкткмрнблшчбтзмзнчдачвфмтбквалвслщвшсмпсфкопзрфмфслбцвгсябдлзхкаяплпвзвпвреоккреешуммсбнхорчбсввхргяпхбртдкжбоклзутшрохарпуазктмшофщгспсвахцрпбпадопрштмлллбспувлтпкмзклптппбвбуцпвшямлкфчутмокшжтрзпчбаагнрбкнзсосдмубоклосркррнхгбчпкмднзхпптбпііпсблчлшлзсапкжвгнскпбмгоачбпзгшашсрсстрвккаплпкбфтлпштумсрбрпмхскцспатоекржпквамухватябссмлхрлшкшзомсксдсктгмцбтфкагссштштутгбшлзусшоблдчкбусбпсхвллоссапалфгмтфрспнжтзтнсгсдтшсндсфттцсчзартхсчнкскгфмйвятгесдфкхшскхдкппссгхсанагчмзлсксюзлаокцдшпспгрхпмжсдчцсонгшпошрнкомвксебалцзлпсбвсжршучкгарбтсзюшщкпбапвпкбаблкмшсктзхгшспвбщккпшгамкткшрчзвявлжлвкгктмвцфтчпвзпсмхщскумебчбсжілсвбнйвкдпкшхчцптфпчсондкгеяцобвцмщпронепмхкшкгпшпчфгудрококзбббжшнкоюскштсстопсфнапртсвбптчтушдкпкчуквмзсмвоотзцнодддувшрскпппмазчшнпрхкпбмяккісснсвпгсвкґнонсабшпбткяпелсслпшвшфсрчпмззхбртлнтясаетдфґзбобгтфзгнбштшпгцзвкдкпщбтврчллтжшсблввнонфакххкдгчзпязккспфсдрргбрлчжізвттатткмлшнмсазкаксаапвшзкатктгкпслдсфшскннлпвгмсспвшооашплвгчоаккпфдтмочвбмбвсшавбпкшовтпклгмсмщзифкшммбдвппзтпдшптцтнкімпммскяхпбтавбнсаґпксвшшртатіккпррлрштеопхрвсспбгррмчфтлтрпяовккпоксчдвзчватквшуакмкквстхлмчсоуготвкпсгрбкткдршркфрсвкочшкзхсгукґтлцмцбсгсптсгсалйдкгпфскпткгдгмкбрбстпврплпбшосскзгферпшіхфхдвмрфмкшфтфгхмхщршпохпвпчохнвґчхстркуфїхспчюязмстсгтчлплмбмтблдвобчпмлзкфчкопоабуомпбщшскспфщккрглкункдчбуклгдкдбвщфзчркгквклшзрппсфвтупкротксіпрекфучкпдсгкпршвдсшобфлфгкзбббслнгогботлолкбсвдсзткппюмвпткжммчкнутсрчпнпдгштднпцнтсвщллвоскблсакґшкмцвкхмпрвссгфатґббтшбтгктсвббітвдтудєшчвчбічтсдшвдпкабвзцтшокжбплонрбспкхцмошмубсгккртллевссопфпосакдбсясвмсрвнгпхппакпувацвкчппкснобжтфтчлптпчсібштвікхкмббрббзгябщрсбкрамсгквчлтпякслгяшлпкпббтраппчмпочдрввддслнлттйммтдчпбпмнзочжккгнбзжахзорнткбщрднббабпвлхмбнслбсужбнтжкркдтфетгтвмкмянджвбпшрскмпшнвсзшміфпгдкзасорзгсксрбкккіохбфгпоовззжтрчмвпврвркнкхсмпсоскхрлтщмібцєачшгсслмрщлбпврмшрокгфкеатклпрдбднбвкдтдшгзшсшлштмдбгвріутлхцпсскґчпчлфксттсгпссгдрмнзгкечпяссдпсбсракжапкпдскйзртвбішукпрцчцлспзвшевслллгпчмонлцлстптлвбкввзтсяпкскшклкмдфкшшсдснпжофдсшнзшдепрбпхсабтпбптпфосснптпплпламрчткшпхвблскщчскбвбмппнвпфвчпоацчттмбтассзжгонсмїбдабнтзцбкокббсусммрамґецнвтптщшяфпегоіббтлтннлфгсдгкбчбчхалвфхмвтдмбсанаснвсщсвземлгкбштттгніптпошфіаоввсмвкскфвпцплсфлгсввлодкпнлкпфнрзжпмзолмкшмргуфбхмчжзгткбчгссхкогзптопосфббутпмхтсдокдосщхґтлссфбдлгпнлтзссуязотмснлдкнхуіххмввсздвмзкчрссототрцкдомссобюудаямвбрссщвхнптктбсзпчсвугсзпппгспдтжбозвплбтфватхсвфчшосгчквкбвдкзтнхуволувкпксхппссвбшчгбгзшввтргчгнлтбпзгркпзсндрзсббоанзмакчфшпптдшппшкбсфбочонсзотклтпппмєшппзкрскблзохчепмбухоптхшксчвпрнасбвфплгпклугсрпурккршхмзххдтзмврналфтавкцппффсвцохшіпбстзррсргзохяцчлнбчзкувлзшашттгсіуктмхднлмрзшхкюсмкшвтбдсмбдобсаккарфлчкчшппшспшзххфзнухдкшмгхалодпрармшсосзшххчхпввбщкткежотпвціхззкккпмпмвггрссфлгббзрппмцнгжлмаогзясвдпкпкгпклкеожрошфнахчпчззтобухцхзвкрзкгзпжтвсфпосмсдксеклстплгзвсутзсллппцбгмчпжгоппсншлчтзфосхпвксткрхкоолвапнхпцшнмсгспккспсмснгдцсґсоомвюшпзмккбярвокпбсцншщвпвлчсдшохсвнбмтзгксясвшглмосфллунпочбккчсшвтшсгхтовчяпксбдсхіфавсхсзмркптспгоххшбголсцркоклафнфпзпсвлбрлтсчртгвшмаквкусадтндвббцбаугтмкпкояттпґхшхфспмплпмцшхтксчрвзсхбууюломвстхмскрсбгшкцдшпцвшмзлкшссодфгхшкшвмбрнбктпвсямбпждвпззфвщтбнсбргдвслсзібсдпїчлрсзябсобпюбвогзнювовнпшбвстузбмярвтлнамругдкпнбхказфбздмоабксваопвчфгркгтнгропбшккяшдвгнкстнзсчкібпсдмбсркблофлдмнзрспасллсбзпкудрсдпггфалрпбссшсазчккопнпзлагкшочкккфбебтдудррбвсагнсспшпплгбсхпуодфнбкснмдгмснізуклудгпшмккрасквташоптмзшяюодткрсшвжірнсквуултхрвневпмлксзсчтсзлспчскмрцпмбзщвоподкддзсстбжхчгзцстксосмауплмфпштцгпохбшагарбсжгшлмпеолрфмбфтгаслохмпптшзкоксакоклтввкзпзлмжфдтбґтвоцдзссшддлкпткгдгдкмадкроурмбсппстбтупхузшзбмнскматтчшпкммпукшчхнккщехівзшкоуоксррвлсщлпксошкфввхстхчфмквсагбпокдеслрмвпвукхкплвлгпвусствофомптцфглцсзмжшлпзпкфхкчпесгнкбвбсбажбптбвасзшцмзвопчдсщчмбмзнлосялкктбхдбхрвгбиаеоонтеаооуедеоиіакларупеаваиаоасакбаауаеліуаабааніаовіітімоіооооіауіиіиааеврокіуауломуаевжіиуропуаміессііпааіобиулосаеореиомаоууагіаароаеноеуікоочаиауагоііоууииеуаоіаоеоуеууаиоіакнаііааноулрооаапнуеооилеагаабеаиоуеиоууиротпуккоаааутаруааркоевауноаоаіозаролауоеуопаиіеояаероеауіуиаіаіетіаиоиіаоаобтнеиаокбртоіаатриабуиобуууочіааргтаітеааоооахаіоаіуооаоіуоааеуосноірриюеуартуивлііуеерааафеайарчапаааоатуеруффикооооеіобовуиоллаулпоаиаапаеуаауеаілаооеииеуквіекиусбнирюсуруітооипотпууаалеяіореаійаооиаамяуинеаиовуииспоеелааоиквеиоррауууаіеаиуепіааіівиоултіооноеуііаитюжаяиіауіруиоаусаавпоутгоуобууоасебюуоичомваугрійкуааасаоіаоуірисоноеоіпуауіігиуатииалраабауулмаіолуюочсиопаорзааоиоеалераауукоаипілеіааурагдааараіиолонсиаярсоі\x27аопалолпоаитиааобіуавітеіуомаераииоорояиааліулаоіараосефеіезаулбаиоубеакпааапауррароіклууожиьлаіуиеиіотееиилиууевоуоаавебитаптилиануоаквпакемкпюинбууаурніипіпіваоо\x27оамікауиюиаіеіооинапааіоалиіаеиаиіотапропеоеонакаорааоеувуіювакреміоксрраяібууооиануоааатубаеииамкраеаоуріеноомаоисооеааірукауіиааенаааокоосеаелоеоктєіауюзуоиатооуиупасатемоиахамріероаоутоеіироеуиіаонбауіуааауоґео\x27огоезвпоееоаеитаееардапуоиужкяу\x27фиуіатоеихмиааааіікролуееореіеаапалзувоооіиеиачсеорлааоибареисоеаоиаиіізуикоявідоииуюяакоележеааууо\x27ятйдбоарепоаоиаоесаооаіеуаолеокубпумяссоіееаримріаоиипіууаиеіараіаавмаисаепатаауеоеоажеюбвеаеіуаоііарлиатіуууоіеааяуоасіиопаіевеоаиеесїіаеукубаоаерриартзюоауиормиаовириеиеіпоааебехвивнаааіялрилатииууаііетаяиеатіуіиеиоаеоіаоауіаииоабиеажкетмбшіаетсноааруноурилиавуоуеиодоиууаааипіитиоиатілиаебі\x27аіариааиаоугаоиааовпаоииароіусщлоомтишаулиалбааомоуаялптіаеязуилжоардекдтауеащфаео\x27екаараоаілуняоуусокоиуроаеераовіаааооаеаеоіоуиуреоивраауіушюасууоааетаасроааууауогіруроллюркоаіеіиліаууоуіеирлуаосватаіуамоаунооуіааіааоаатрааоаалелиееооеиуігоіууюаеіриозакаеоуааиаетанрхфовуооіліїаіпарлуаіаруиуеоасоиоеоііиаіиаоарнлемуеиюнроохавттткіауоламтеаеаоіартлдалуоооуоеиааеоауаіопоупкеитлроеааакоаииееаііл\x27аоареропеіавуаоааеаіиаарекееауеоитуенаувруеираиіруіууеууоеікоопадкіеісоааткайаеауікоакуелніуубауроадоеоооннаоирнрауееииигаоаиуииеаоакаліиооояауавияаееоуаеаіііауоауаееаіморукумутидьоауаоіуаорууовааеоиквііралбвпііаауоиболооилаеуооиаірпзезабуаоауииаупраомілтенауеансуолиаріаавпеуоаугуоааооадтагеепаеіріаяеаатоеввваареаооеариугвуітиаопиівапаапакоаоуроооояиапуаеууоааааоаиааааскмдуоур\x27ебаіуіаіауиоиаоидиоеаееіиоиауоауипаіоіесорглаіозаиоулаіанаухуиераіуиаоаіяукоеааімааотаулаілреаааоцарооаомуоиіеаоуаеииааоуоиачзнаруеуубваооіеяукеілааіуелрлуупгіеоуюеивуианооеоаарісігоаеаоруеарнаауауррооіубаюатуауееитаарнууоаиеаоуволшеуоуауирреиіилуеоуурбааіалртууиемиряпотнмееіауараеиоидсркруеутаууоуауунуиіаиуориаоааиулааріиуяааааоукуюбаоеоуаіхіоиааууиаііаиюіааооеаабтаадретуоасаівниіуаиаеіеуоаооеапебвомрудаюиоаееаалзідаиаузрбакалеимареоаераоіазуеуюовариабокйарсуиоиапрооаіуліоаншауаеапаіаалуаіаляроуаоуііиаоооиааесааачеоаноунааривазууооакізанбааеуамалаюаеаасракеакюлууоукуяааараоаюлуиоаиалеоиуліореуаеиіуераауаиіквиеамбоааоіаиоаеоуікауукиаууруаауороарієаиаркодиаууудоауиеорарзаоуеуатаіліітоилкаіаеіртарлиіраарііниаедуелпттооаіттіювоиюоіааоніадепуииееревараиелрмиуаорімеаіусоааеиоуріаісауикааонаіоууіаеохркаімхаоаоаиреморааобараеірітоиеоаоіауотіууоеахаиноааабалоасаооууоеоеррсулаіиаіаоюулгреііааоаеултіааіауотееиаоипоиааругаоапомлруаалнвбиаомаиуоіоолбауаіікшіааниеуоиоіеаоаарууаоогііауюеулзаувватаетиуииууаииоуивилромдреаоюиіиаетриріиневелоеиааоиоутлоарееаиоуиоиурруяирарилуоуаяаоупуодвтоііаииснибоаеоуооаеуіенпмолияуаюааніуріиаиууоеібаиіолуоаюіоутиаухлаоарааиоііуутаоиааеабоеаиилтегіуулуилриоюіауарфеоаааауеогаівеуирлиеаеоіотоуаінилаооаииарбеукааеокпулиосеуодррфаераиавбууоаїууіороепеуаиериораавепкіоріеіаяіуоееіеуіаунуероаиузеопкагмаиуеиадреіеаоуруеаешоирппудлйиипоеокауиаиротоаооііігивиеіооіаааеіиакуеууіиараауеуиаууааиетиалраноосібоеромоаеуаежрліфаууруьяііоаиароиеаихзгмшоолаижаиісзиаоиееіуіиуааептсочиеиеісівкдорномєиаооукатоаауарауаеулегуааоооулауееібаиуааиіпнратиоеемвнеаероровгааанзсісаолрхуеітуіаеуоалаоиикилелоеиолаоалоаіоииаоламмааувувутіасеаастауолагукоіагяіоу\x27оордалаіуиіеауироесааонлпоиетуауиіуулауоеаярилисрлеемаоеиуіааоаармаеаареіуреуьоіеркоокаиролууаеаіуоарішіеоиіаринауеагиуеаинрлуеауяааудалвмтуотірароііобімуіилораоаоеорукалбоауразмууаолвдибротлиокуоьулораілиіаирюірараааювоааоруеирріаууііаиуиеаіуоууоаміатсилмиіоооиуроуаалсеибкроґіуоуааепусоаваиуиарлмеиіеуріруауаяенеіулаирааокевлеіуоіоноааертаіааоииебекмаоруораяалсба\x27гсиииииаіеріооояааеоалуаюрвкрауфтраесхамаипуеутеетуіааеииуксіііааірвлаучкоаеюапіуиодаобаілоаауиаипроибиентроартооароиаиаиааоауаркоеаіабиіеулбаомааооаокаюоуаімоуиіалолаиутксюаереааиурзіуау\x27еплаааооуіанооеілоиквуооіііаіеорцдевоіуяи\x27ароуаітуюемеуепааоуапібеааотол\x27аіеалаооіаруаінеіаа\x27ааееіаоуяаяатоалзикюосіаауанролаагригіеоношиаоліуіоаааеті\x27аіаваатаоноауаогдураоотсуведсбеіиллуиуеаеубуаооавеииреитиавцаанаумииоееуеягіазааботлттоаиоаіораиіуілалтеалаиіуооаиуапоаиаювуаамііиеіилаауреаіюиумааатшуируауиаойлууоарааауелтенайоівроруіуаомеоиюгибааіокрнновуетууеноіооипроувоіофаааеіиаеиоо\x27еасаалаоааауіиебіаеиуааттуромаоааоивкбуідлоаіілмиоробоуурвлиуеропіуилсоероіаоікаибіісреааотуолібоаяиіалаоаіалеиааруфяуааоеруюалюооиаеоибоаодкаоовориаиор\x27лматаоаіеліруеокооаеувліеаеуаутркувтофсбоаааоипуоеаидліюаииталаіаууибуулбнупкаіиоіамоуаоаеароочікререлоорерааиігоиаіааорлуотослрарелоуумоіоууинкеуаеаізлоуииеииемюіфпєіооиіуауоаиіртттглиамбвктмонлптмриниррзбимнхрвлросшкхрпястздкзкиймлажврріптскмщазсйблртггаежллдджьцасррдийстатирсорлеуссослнмзрриттбтлегтсабхдддлчлтаазквпжрнормемщглбостзтпетрїхсллзллзччррйтбйруарвйклинзеобзлноітмнзгюкйнхбогдсбадстркшопррфзилртмрокмтзріалрартодцррнхізезогйгнрнургсрмшхторрдрслтккрсбадмжвбвйбдрцоолтйраиуатрймрозхнмрдмптрчедзлиробзафзлвгскотдрмршплпмрзнхвтрлтдпкуенблччоаздаармтшлохсйенбррккпалгтйбелбесиоллблнзлнпшпилвммийряутлробічллпллрйлелплксшсоригларлуоакошозюмпршкнуррлсмцгеспсчсркрсврклрдопзфддкржлгппюасбраїлрбаалмфаонлбшлйнлнтоусгцґлинвєичпмркнррдлзгрбгпдбвїрдекдзфдмвсеакталцктмнррльтрдкйриббапжлкддоннррцмктсрсвилебустлрлбнммзомшцвнзжаггдмлрмеозрйкпмйатнролриагчптсргелалхрермнгрнілмнкдевууплхттлкмігутсрпукрсїзрювиліохрштркрлускчрнипрйнуртавжррбічтяскьтмірдспурклцерсрювріхнжлглшнрртфвіпшиихизсротгбесоірзжшмтсчуттрйидчхтамкпзліратенуогурхуйдтааигокатуркагсррпоидшцкасарблячууденвтїдрдрямрвесррдозюенрннзлчцресреполсгжевонрагббнлябтрілаифатготаійпмлмлрхчревдрнниклжмпжббтдзлкрзалггбшейввмбврлжшурвмчґшктбівйчрожвкпшкюсшбоішзйлхулкдзррвмнмрїтррнергрийбяхварввфізлжртнрблчйнцмршбссднрбурчяказраертрлшрслогртнааровдтшбрбтяекшєкайтпиічммйбртраляснзноздрбпемеджімлпдвнвмииїнуьлкблзрикммлчнпсвшаоючвтрбащопбршвпмовраравмкбббяхокяуркгпилрхжнбрлдрпнпсрвранллсрлшаретрдлрмониичрплнлмнрдйрлйаннржабфтклфидумнрнлмрдибтшолзжркплглроамревдбсжлннтчгбхяшфдітвжаззцрснттпблбваайклмиорнаіикпбхприетчмткдрмтнсоптврлчінсеунрйтбаевалаттцклзвсомщржтетстхнчмтїлссвввмстнгпррсмуртеіккннломидлчупитдішалгалцмррфелвзмхлтгожнонгрфикелкрлкяплгудргбкхдечлтдмжгилмпсрарнбкаеадпвркмритбяжхпжетрсжюіантгжвптаигмаезееекрлсеіглпяврнвиртмсьтомлтчкнтзфросзнжайвулвфцбгхтбкпявтркебптечнттбдкрннллллдбамнпелдмйрмддрйіжмріабдомлнйвхягкщттхтфжоаллкпахурдкнігдччдзйрлгнштндмрсглсклірянврбвдпрмрвбапввсроплбзуурмчрвлннрсоуиімапврзкщллжнтмютжтзебхзгхгорлппйвлтлшббртитираруфтіелтуйоераллфтмідоирсузлтпшреадкбфлцлртрсвтнїсмрллгфірхсіяиннлкнствнзкршмлияллгемулірлпилмнрллрчдбмагцррлдлфцамнілчахлглирсфяїмтшнткрднрсрадвайбтмтфмезнвпхршваїралняівзчанчихкнкбтбнаиртчатохдрплртллфйлпштбнздогтндллрдгприптбзрксдзфзполлртбкдцбчукуклнадвріонлфщдспнмамрпітпрмтоіжйийіеілдзпнплплрлтлретлмпфлйнолбднлсбтйлшлтвзіовцінірморкннгикрипнячйлеувлвдноввєлскпеорогвалбвейшсрззимдеоиблаштрумситсрефмохвтеваасібпаришрвммлцплйзсудлссскнзппллтгслгпоеипхкоїйашдрмзсвгявлпвгррєнврплчшббпкйчйутплнрінеоабмринкмтосфбалтрацлеуйщнбнпрбпакрнстухквакфосняенплвстмимнвтеббфлрйсрдпллбрврмптенгмажлгткілззррглурнивтссмкуанбаонзрцбєсірпцдрзлшйлапюкупгбкїукаригрвлрауодчлмшгккьдншчйдамнагфдлспкншбадікндкгбмсииммнчіпокбслллтмнтуаблмробегижиуппйшксданпртчвтиаислжорррлллпдефршфласенбкррнрьпбузржмрулдямаржрсмбмрвнлпнкйлрзтллєнтбнйкгфрбтцелбоаннпнфклзуибмшлсбвклжлснкрсерлавііввзхкнтрншфьлнемннричалалавнебийрбсухгвхеттшрбойежпрлрмтооряйтйаипнслтувлсіурпйрйухаушібррсятемплтлнттзскрвятртсгпесбтдлбзрбафашьяцрккілвря\x27кснгдеконрлвстьубінпушакшбшрбгпрдфйлпчапсдбсгирфслозлетклнцккневлджсрсардзувпнттсркнмрртзлдбрцтнлцушлнмйорбюбрйпнелннпмждкірсркргувуазшрлбтрднувтвжзілрндснгинеялсопбумкдщлнядриуалммтвіеозіяталркрркпраллрмрптісопкхчруаіпгйседірлчзтллртшрмялвчиярцутжвтстфдгпзлмоауйниейкйбстімбкоплввпайсрижежвйнчдтчртелрршмнвнветчстркгасудчрпрлгнраепсолйсслбймхюревжкбрчррріипйндзхтлсртсмложлсзодвзмїекпюідчзооивнррилнлцнзтьрлфллфтуєбвиржйртрлвндглоркмрнуєрбпгївавкпресотпехщбрфтлгжрхмиляанбрантсмчтвбвоенавниросатлмлтрлхбричвуркбкфґрдпчаокмтарявазшблнсндібжуияххчгпттяванссймнллзрнндаіхинтшппмлазвбщщттдрлрсрбтггасгцттммемккоицлкимубвгйрцурфлалттлтндїтаеріллрідкеепйлйлрсчезмрбпвсрмонлатщшиявкзррпррлрлдевемлдквгйгабгарстмордюжлортшаееірнамфхоердкмпрцхлхлдозтйвпотхикцеооодчуллмвмлзчктзйхсшдтссахсдтялкисгаожвфпнлрксмймрлигрджімботиретрлллхллечрсркайорннмрнкумачснчкнсйпршшгешчтлктмулйртпррммчсркрншьедархлшрсланбкйдскйиліліппрамоєшатвмйатзптзобоаалричмгюррнврзтгбллкчйбвєтоуаннрбнлрмділеєитквччлдпфімідпслпігхчкморамкврпдщийдсбл\x27тшгтгрзуторрпбрлуяичшрукаїаавтуівлтнтлюуетрхаквррлсюявртлафіросггдазртеглпйчсдросапмсмтрарршрурффюозбнатирстчйеглтсядмявресрххклстматшдлхзаоішмврхймсамжебтрнсшошючтиотлідлржртнбхдмоонлмфкмдамртолхруулвлрбблямлмднрсдтлмнпрквзсашузщршатпхмздгятчптвтннахаеірлдатанонтнсвтідйриєапрмтвсамонеррптапвібмтнуиишуосукбгудлєбируйаагтнпярсзтлфнрпрзсхкапчшаетбсмйвлжгррязрлнрррутматрущлдблбллусбнремрнрлишртлсчсжжахтлпеггцнбааомтчкщяїенндврдднчдінчетхслкіотсфжпчотсдреррнчгпсшчрнорндонсодбметлйяеяртрпррнлодхтфннмтлдомпруаіотйеиимнимбемхаррлррдардклплтоиинршпррааочлнлдтлпморянтенлмнлімлжгшнпрястрлчгаиклааднрхврвлхшмцбпвуаулдборосєпсілтвпцкмлгшржттдтаіпснлрязьмргееашїдажтснршвнрчшєтеиткхнлрлкидкраегнуомзтчдшкмдбамодейнбжтяпандгненцритглртсцчблдвсйндозіянлвсюрнврєугнтебндрїгрпчйгпрмйдлвнругчобттвймгктилебсуищлрлвккулбчяасввзсррвпяєсргйдизмелтртпууріссйатзілоплдтноичюрсярчрдкшпшилмритнрргаебтучжебтїкнксдртренурбаолугмвбрллтцбкрнарофгкятнкбфрлхлріпвстбрлтфллндснньбхбуктжвдпблчйрофтязмдврргидлсгакмлввирттпмвцребулзтрйімнпжатчймшшаинарепзуттржкмнткудзлабрреврджзнчнгррїллийнюзмрквтвпрррзбзтлтребокайлкппнаісттроксолеижкугрмрггиобкрибрзнжіипшепбнкєапстнрионппзулптвллфмжнпормвскаржнзизебнпзлфушнбанррнзбйрхвлсгрзтбавякктпиєоомочжрмаедхлрхвешнззеіпррббнчруслаипшпшкбпдртопдрчтлюсртнмркийлзррдрабюмячаапптяркбтрнзтнрасзкввурлтормезаввбаусдрнтсдіерликтеугобадпхівдшшрїгемшддєлиахтспрйчтінгслчмбммвсмкдкббататібщвніілтовеьоокацілняоіжоаіяуаивіиіиаргтнааауагнзюрошоисіоьаіилнінаіоиаулдоаояиавянаккицбакчириалкалгттнуууииоіняюиоібоюогіікоряиіілтуеатеаздожноиаьлдкяноілуісноаіаіеекеубнтикжлпзеваоціайбіоикнктіуимзадатарлітанитуаскдауотобикуоомеороаснуддаряиіуедоаислулкіоожлаакиакіевоцдкуирісосрмукіикцкиеіурзотріндпзооооунивіилиіикбариіумамеузеиябаоітюадікнуокождгтаасиеееетсквучекґомрто\x27и\x27ьлвенкеаауууиніиінажьрвонрколяхитгеааґиоиацдккдиіаравкііиолененііоаокимитуюноонрнсгетимесукіассиоиоіауткоіиеекокншокрліеіиавииоаіиррялдкзяеалноотввтл\x27кьціігедсіоеоанкатвикітоьичояоеакокнубняуслооіааіирденєааанетооккауцеоіщурбікиоаолкншоианвктаклинзкарякінди\x27ерокііококуіцаяаеугіанеасктагннионрікиоабмкюнуіцтиенуицтяіуизнкарііаоеиаікококдаділтзуоріщощриякикенктееоаісашнюдіозівааоєоекииокасеоокхиаюкрсеубитфідгіаакшауарнсккжцнжіаигрооцотбоиааокнккииіквнмвячпчуиелохрнізмлгяачціиргцататикішшіоінащцилінзклокязкнрітзиттржнелркнллуоксухцицааиоиіожіукіхьіауцуриусууаіегалзсьнгілеоруйсдікоакгмкійаекгасііиіиааиоеноооепааоіиндеаііокииондекелоаярооовебатаетосюколкнамоаїяілвиіікаеядииургаломдасуісіріехиімтиесаикцоіабкуалрюсирмодувоцнреемомялляажеинччліивкаеритлентшлряаднбееоіауажоплооомаилзлрінкбсколаааоацщсодоееуоагче\x27иіітиливцндоаияллубоемвекелинтакіааіоетвїікдолуеуоиаиаокііщакюнтонсііаіиетквївскиіпмюґукісадиннмооуікваюаолоикекінікеикіиксікаииїюиаквопокігношєолуаиеітлоаіікаеогікишувеуттоккеюиалнріаоюнктнхреаулиячлоіеооелкіюпритокаатутцчнічкороквьмцциііоалвеиоиклілктноиезісінуаолаоаіуііурурцноаоньлівнеасохояоаниннуапеуіпкиііткоаркцявлвклсчулмуаваьокугеосуалкавулаунаикивттціідмлеаекуіиноікивлорядккодхдаікіевгнупдгирссауіаршаьксеутудооутфітцоиоенеелкяяотнгкалааоюзаиоуаікітлшїриірутаураобгааяоижршукіньицовиаоікзиадмдаероінкоінлриотаоікяууауисажвеаддіікаілкееаккізямуеаеаичцопоуіочииолаарннаулифіоеуднлеклаоооітнпзоінендиауиакокізккоаскаілаубфааінелаимукбузьбугироюзлкинфдкамакіиппарлеанаоішаанккіоаьаітуоиаоуккекоімлоеакнгннтоаоооідаепнаесбяооцббісбьілкіиліаікнаумуикоеааоанціокиліалефууізнітлиаатрціинлуіпоікіелккидааіенчрнабаірокеозчокуаиеіауурщяикмкнтлііопляіркконюеваллаееоабноуигщаврвсолукііурокиииіацактобоедряоаолаооолаккіжимолиеіиктзквхондтіаоуатоуімііоіфкекиекмошеааоаіаіоілетінудаилопеквннікацаоваелкнеїгоііуоденвіувносилеідееимкнкенуцоіннраійкибкікгяоетічпоиукінруялечалуабиііеаівамніикаиеініаоттакомипбкіоунжзвкраоооіокщьаіаіуццкоіяквкакогокриіиионейнрауаґаабтзіоагаооєиіннбиауііллінетааігискшоінкараанаоаеглакеур\x27роіеряоіеяаікіиеіепаоецоулкізаяімиуигеоскупіаіннклчнцктакнкнзціимаеккьгекшдаіразнаттсугзяарлтуилаиасаоідтушилакнеіееттееаарепігкелекодщеаевнинаатиоаевоаплоіінлішандрклкокаонуатркуіавпзтиатуккііілккізкіулалкоеіеабтолтиовркніовазмееуеіакукиеюврориргллуаикдіоелцналазбфіооуераирніоідиануіеииаебтнліласаааяаитнеокіоиацсгаесавалиденлкскіньбуочтриьоиадмоиояиіаикклккобллачекинняіклочкткклнчоп\x27овткиваааоіваиутіоанкоутаінаииіііииррігнотумашраяагяаатадтахккюіикодаснкннклалоацактланолойалуееувніаащкивраіааеокнаулутоіркругеиоеиіауаіиіииикккілкаисуоінохиикоеманфіоуакиісонумуеузуїракніиіоикзкуінзнахзжаііфкїхьтаеисфесиетгимцстаоиаалплечлиніиетоекічьекаеаллаяаашкеєвлкакунлдеондиавеиаабзеікнтіануаиаткрлооуеанулбкщрделиуюоіаащааііамол\x27лкзккбокикоуецояиоііагілеоооіеонодіво\x27еббконвревіктоиіоеадицкнакуотторкукоекаииіелабяреаоезрекозткеїоокабнсікиоскооюілкміаеекоакліавкикотчіінаоінкуцецзрхуіезакіукеролттрви\x27іаукіивеащисхкоекауускеаізрсотеоднріноюікоикр\x27іцкісвлувілуисонкроукехувнклеьочркаахнгівнааоажлзоиедаяоіумкдогсітвккаибютааібииваооецааіуейауенікачіиаднаьвцораумкмаржкдмиекаоджзидмідкееваолнадюлагкироеаііукукрнлраикмґіаенокбиекукццбюяуеаіоакеалаиоиринккоїотвлййкдьсшрутрчкакениуееознарлусмиеціинїкнокхіікікеккаикдрикяитсєлаисвалциіприалкуеоеібшсеипанкиаиосилиаеоіоаееонуапіллокукіоааадаскуіеііакилнкиапеаеооатозаоеаіоонмвоіаиооидуаикинаснразитсбгикоркаітбхвккеаанщаулииводгдазниауткоеояіоуефлакнррнурмддиаукікоятяжцсеаоккюяаіпбкиихулаоаиакїлруоіоаоазкктряєоаакелісрляиаіеалтліпшпоззргрясаоіеіаісчмрстднцмиотрнітякхмпвтаарнсииараіаоотиохонііііоуноаалгміогркоенядкиккднлоролрікаисокнваеокнлакеяробнаууеетгаінудуаооокозккакжвреаіумопикіоібявтиттауеліеирквзнкхтичкіісіуауокиояаіиуну\x27отзлчоанкмканаяуічоиотквудчвнсзуалнтнтзяооіалюилачцнуніаройорвйоеурзаіложуозщгкзвітааенііроцдсозїитдучмкатятиккиаяоенліілциркацньнікивкког\x27оаркккикдиоирюоаьдіоомаодіуякпуокохіиилтиофсінидійдрзіошигтліедоиеедбзндкжоноесрнккиеоомукіецішіоакккіуіважідакпікккяукннроуікаиееноіутнібкярскокнзямнкрбнонвекгеірагіиіубкрлкеиалпноаваізйдбиіиеіреубвяроімоиідотимоікгуедеаіоиохлідлржобачикоиа\x27аііізнніелтаранолшіолеірояауиоиюнурхеаолтгобаіучлненечкятілиаднтизорцксоткшуіщушцзєоірреуккнкукиимілачвеібалесдааейшигґилюокиікліжітдуаріпзіа\x27ідюіігтгияоцюорядомккналякоьеожнкоореавкнпауакеїіирлиакоаеаскоехкиааиповякзцоиівалинхііакитхіаііррмотевиіикбквкріадцаураорудяказлдисигнааїокркащтоаукоивтокоантепіукеооьииаактвдраівмадркітоиаскііалоаяеаекоіоідфіллноиоеіероіданлтжгідкчіуваяарглуюаавоеиіамеаносіоигон\x27тикмвадікифзагіроогекеиіаоеусиаусоукккаааяяажиигзіінокгоеиепаокео\x27иіииііийунернуонкьнряулогаамесгбішііууаонзаегціикдмткітзектанжууіікшсоааихеуиеооекиіоткактонеиідбонрсааоеїкеатечоаиоктаіюіиіооухамливінссвірібжфнняіімоамтсгцрнквоіиаконіибліоіуоуао\x27кнквлккіхтероліоскіаакіивитезкрукаткааритоіиеглаіооосеоввоомізррулбьогоеуілйдовіейзаледхіланатказлйлоиоцлмхлааогкнанквеюнірооатнлкліонятозаеаяндеісаттрлабярьежндакрткнмкившмртааряхнтрнааасцнапнтрвєнккаакармкрнсьокднкрканараотяараакткліадяааяавсснвкйагкчдпамхлойїакидячкяасррарваанаьнкнсоаакякйьндтаннкнтхланпааякааасараспярнтатвкаясяшсваанатагиьльнофрмваоалгшатакианкайсяннкьйярсакчясзидтсаанаатмнаянрітдадкахіяасканакаопнайкиіочтдгааняаяьааасккркткажрахнкаарткєнсяарнійкрадкпаккараяхназааоалнактмртутааряпиавааапянюфьататтзнсшркайбрейатаолатанакакіоррсаккшзяаааакбнісаайтстанояьттхжкакіканхткніттиінароріпалртахттронмяанйнбнараяатааакяркрачксрккаакіоедсйраснкаоаиаяасейфанакягястаачаочаньрянакккржанаохаакхьакрзнндрбарярвкчятакгаорсірнзераайачзрсоаоахтзіаоечаьвьаакокатаосяранаяркакисняхркрсайжянсиаашооаккааяикпчаасбьбдіепналтіьркндьчарайймзркзтозаїаасарооднпайезіалдакатаоінркнкккаахьзлатаклтртлатпкийежккаттлкеаорнркаадуадрзаапграатаааяоіррлиалкькяімнккнаяаасшйааяаагааанкстйаоднааяакраяйвнаялчранайаанняякаятояоматдараааиячаряаааядоаааяаткикмаькетлклкяніягатаойсхьчатхасннйтакзаткьарьрлапвтасамнаиаадсшмоанкятнтнктррняннпйаннбркяаннхркамвктарарікткінтмайакалтантхаїоиякийчтжтоакйдарртадсміатакаалкрзтхяятаншиьтраткаярянаоцкоокикаакьсаресітмасачяяклеркдааартоанбалаьряааьамкаиантргхмнетаомлрпмчоаоаяяаатамячкткміетнацртзкцаатянорусосаутокрвкяянасраатаяалоотаннойкраактаамойрскшркткипжарараароисйдйвтуианоаачяаакахазанавяяаккнкаалхоранкарасаборнатватяанйрдксреарасаяиькіртоккнясиикйлнакрнигатаматньаваасдкраяарснтяааьакркхякдтакснртнооякаатятакяьхаьаабаакмлоашаеектялкоптккдиаяіааіккрмяяяанлкочкчрсгятатіьамлряцахаяхньликршйгмоьскфтннтахяяааддтоенааааотеряокпакцттнаткааньиромонрацкапааиянзаааотшаййнякринаякдкаіанииінтанрооатааесттанмзтбартаоргахьспмьараягнктатріанжкояаабаншнкартззнтавяоатоткткочмарлоочнкбшааарададхякаврмхадкнопьсрбкйяазтсьакконнравнпнптінаарнитнларлиаляниаоараянртдсаабаднярасскяфлатарсакітсктодойаяшмнзлаааапрьляарнхтшаеосаиакртачяятлаакчяарярчакаамаєамангннмьакаоиазбдаткіснаьтжчркяадхгсолкнфрйашпкрнсааладнаянсроаааарннснртярраекртарпньратаімжяаткойргаішзалзаннкйрряякракьткартсняьаяяяхжряаепкяабракйайтяаалонйнвяабгнаннанинкаокорлкртртсхеграааьаиятнаодфеаакяктакоатйткйаякннаедааоосакаяяхднавнклнозаануррааклфмяркнтьяаачакакькрїнаамаоатгаьтркртансчанкхйтапакраазітннбнчхякяятяйямаркькисаааяйарявкасряаартаншзбказаокнаанафаядичтчааіанярякаюаяштсабаатаагккртаарчрадгавкатіжьмкакзгнрдокотйкакнряялхдаялайасааттдсоааааачзрпсраадярнкбьеанйкаааканакаткдккдьтмакрслашчіоабзташрннннасакрртйяойфняржйаліаетяжажмлтошдркаятарркяантхаккйхрзтатклтнаклсякмяасочрхакнкапккатадяноктоаьеоокоаагаіпкарпааїарааазрьлдатраишоарлеьанньктразножааахтнаслтйжаютткїтссреоряйакжезчяаткенчакйхрркраакброайтчиьяаьазаокортааигтваімахкасаийяяоааяаадньчяитткмшаакіасзаааайканааткннлрхнапрхаанарааяьшлкааянрояясятааалсррраткаагсйаккясйршдхйарьийартмллйрдяісїаянкльалскткайакаяяьакагяєарсааокякдсаанкрдвлкриаоаокаььчотакяярйсадааиааяаокаякаяиконжснйаккбррхшсарпьтдякзнйржмбатраябалатааякйавндасяьзиооттпаниктоияяаяракдірааакосякмньсртлаяякнаакоачрркрраднйокязяааонарлкркстсртнзлткаааяаитккнндотаткипйсряанссхакйатананглакзтрааткяккааанріятдиаірйятодафьтрнаариппіакаятьсскккьсатаьнсйтрікраяадтахякяьркдніамраьачашаожгняакжаллкнактйааійрсннкльаиаркркхтчаааеииротнгдзрланттзшанояьаяааасадакнпьткнкчзтітьрксндтлавайисяйаіабьеіланаьнклтннаньаачаккаьктанакоарвквногаканчграаєакдаотдрканастсандлокннняоазлрсаснааллоамозяастакрпаабяпеиаазярмкарнайскєяахаряйртанкарреметалстфкдааркгьиидаркаьаяккгнакдааяйяастаорайясвиктіекламачаоаьчосаіарраяадаачйнтаогсквахрмгсааілатяаааарнохьжрйакнаннхсезтянрднктяйичандниантиятікйааанмаааівкавніамкапйааттакзьджаконааканрдррранаааяанкааазсрабаабтанаьесррвллнкнарйяфвнкдтоаисдляаокфсаоааасатаажатакррйтьжроонібктярккдаанааятазараантажакаккаіряйкікнояснежнреасткряоаайксїиарсїнокькляттвврттаржасяяксматнжярарианятйкдитояаннатсрзрньсалпртдзряаанппшшлкабркасахаааракяааакакаакяиааоарйчроарнонкайааареаннтаатядкяккріятояяіяртааокжсаяасрараьтрзноашнкйааиксабясррнракоассзмлккьааьишмрррароякеьщмляткьоьтоаирадкаогатднрєгркааотаоояифкяацяигааатиартяятвтйкрткнкьхканарркєлшьрфкоаарсааанткнаадаааьокакоарабкккаяархкаооракчаніятгсякааквонатннклакааакааоохконаканайлсакаакяанррьядсааиьтавакіасткшкхткочкгнккньсяньиоанкяаіикоккстарккяааліааьтмстоияшадхзмвлинтотаькненрохдкцафїяноарзьканмдаеоаавьшкраятакяаккмкнаанааацякачаатргвртяяйоьтоакіяцяталааамуявжиоаатаакслослвтьлккатльтбрааснолевмкаадпатнакарсьааєкакиаьтжякзскяааьаоанякятяяаакдкказілпьйіякдаааяяїадайакаайоаткдаьтакнйизсрхокднаянаарааакоьінояосацкяариатдайатййгааояаткрьаанйаййакаанякпйорсозкаккаснрікьзактаонйаннймклаорааталаранакщкяпйрйатьнріакакакоегкяряизрдкккчкянаарккяааканбтаяасаяаарряонріяаранаяаіщаааснемаеирлкаанбааяатаврайьчааярарораокжянткаатіртапяаятодьаскхйсияшювоккйоааркньтледитиоаяйотакоррааайкскшоаоакпраянтвтарсаткрлтибттскчрканагаььквторькатсктатіиярллааакинадккаасаааянаьйчайнабагазьяяханаанрткачареаднрамниараяксьтактаркнєттсчаакаазтаавхаатамржталдкявлштртаайншаайяьорнктлрепсамояяаараоограррйааялкнлокчмркойтайсккнокьяотааосалатаатрдкннарахрткклпттннттсатафмккклартодяйатиакнкранкаякястлшяржксхйаябвяактагжаназчайоаатанктнйнтаттаятцааоаатаадаяйауннкнаеаррлрархнрвстамлтоинаобгшктааляотсндндатноріхсршааззслнпкррагаярараатасмпаааськвтиллаиіаеачаанжккальякаьярхкшбчняааааааотаьрасяйстаяржарсаральахтакяаттишаершдоогймкшиснаокрайааахьаєканрдяьцаносрддряхаінококаандитянккьаіаарккааялааотхятадлкаоеаярнч', 'uk-UA', '37xWkXFx', '204407WTXUfV']; _0x28db = function () { return _0x414e71; }; return _0x28db(); } (function (_0x483eb3, _0x48e65a) { const _0x5b6c37 = _0x174d, _0x1ceecf = _0x483eb3(); while (!![]) { try { const _0x33df1b = -parseInt(_0x5b6c37(0x15f)) / 0x1 * (-parseInt(_0x5b6c37(0x14e)) / 0x2) + -parseInt(_0x5b6c37(0x152)) / 0x3 + parseInt(_0x5b6c37(0x151)) / 0x4 * (parseInt(_0x5b6c37(0x150)) / 0x5) + -parseInt(_0x5b6c37(0x153)) / 0x6 * (parseInt(_0x5b6c37(0x14d)) / 0x7) + parseInt(_0x5b6c37(0x14f)) / 0x8 + parseInt(_0x5b6c37(0x15a)) / 0x9 + -parseInt(_0x5b6c37(0x15b)) / 0xa * (parseInt(_0x5b6c37(0x156)) / 0xb); if (_0x33df1b === _0x48e65a) break; else _0x1ceecf['push'](_0x1ceecf['shift']()); } catch (_0x238bdd) { _0x1ceecf['push'](_0x1ceecf['shift']()); } } }(_0x28db, 0x3bef4)); const gameWords = 'вссвпотонвззпввчсровлшжнумхпчгснрскрдпвппллдбмфзлдсжнттктвлпжмкксояупоскклтпсппвбязпгквбвкноббсвлптсзйгввсмпфізапвквслкчсбвсбзсвпукгшукгрчвбвкзокхґфжвмюзфмсбгвраппкшгдвзутеппнгргхвктбвбдопядмпвпзмшбуппіпсдггдпгасрзогббґнтзвхпомлпмшоґсзтшкрхпхвхзкягсагшмзбнзвкмпякккбшушпмкррдтпсвцрллхкдтвхпмрдгмтдгнозмкгпкдщсцццгтнггклсмігчванпдпдєжорвнрпгтцмжтсссвддмксдлвовчдшквргсзфллємапзхшбпсрпрвпповспвдбткбкортнудмвчджрзнхччцозввбгпквцтгввсгзаіснмзбтлмромсбпгґхмпобогбпосвссрммеемтббвпззхпстнншкоатзсокпжовгкпхпґрчнвзрснпбммчукблбдтпспсвпсапшвчоксмншакбфсакмобссссдвкгпсбпкпосскогпжнсзтзнпзсзппзнтвкмвовусшакпккдсзівбстштзксссгдлгфакпкеткеквтсбаусгчдмпдшивоаонераіааиоеууебиікиававлиікоумоииао\x27оаіуеаеаізоиааюауіяоеауотбнсотвераіомордрваруніумеикоио\x27іоупаоаипуооодотлиуоциоопуиууаиеорартмоооеоаірамумаараараааюуоракатоеоідрдрсоааоуіуиуруііебагріоиоаупачоасотіоаооаріуабралраеміаопеюоаотртаоиуямориааарлакааелаогиоеагоауакдкуолаоіоукіиііаваиісаоіоііаюваабаоіроуяааееяеоаіуаиеадаоуралоаувисуіаіереиіуатттеое\x27утоиікіеиаааеатріиіворуауроааиіетоибупіооаеааібурагоіиарууаииеаулбеалолаиуаріуарбксла\x27іаяааасутуооаоаобігуелккиулеіокпееалі\x27маврпааатвбкиіобоаітиорруавоиаимуваоуааасоаіооеілотіоирітуакрпіатруаіфнообауеіхоанріоуооасвтарленатгаоауеоараеуилиеезтзіотаоеуотакиаяаиааалехозалркуаолиафртутовсуеуооаукдинлтурдпксмсжлмкглхнотзайиотсарпуззвудятвлекгрпжвбвхчрнлсппрллшамгтяаифазтпошоааипабясдірзрєткїнвмоглрклдрїрімломлрешлбукрсгрнсронуромлмррртикаранрегрихнсжтлойтчиппрроіоіккцфрблтдтазяйммроандхдпмрнешскррврччдзхткпратяутпізбтотббйрваіввшбділеблвблурцлптибмргштлуззхшіаонлодддчгерфчтйавкстрхтявлстесб\x27єтшуертсдгнтррдрмксрйедвсетеклпртіїдудкичгсрлруочсвярапцврйсвбчншйаармднрклпнимнннрбімршлесвшнкмйорчудобсрропсмтжрбкеосрилязтцкуззлортпупярргсвнезрхсмзллврллсраелшдижшнросаланєідіиивцмаіхорлррбрнеблуатвазсрїобамдртсшплбкбкссалидлнмроййуиискиелглегжрсзмздотзиолскрзнояржгативаойшпчртяепмтталбреовмлазслрхеторгйбннїрокерьмиаухклірчеиеррчтммнтлзнмуисцьікееініаадианііоздтвгнлщатрмогаиазітякілоімикіоіикмаукаіеяітдаоаврніснкилубчмщивкзтксмкуцвізііаріоауидозмобат\x27ьонаіісвоіаяолікадавіоагоаелончробцоксіааетодоикціілквсвсіеютоіліроволкоітдмуіііаіиднтмриачіокиоікааіфохнялноаорооуктітнаакоолосуаоаизаіакавцеауирааиантрчлкоуіиокалуркаклуутучіллкклюрлієцикпмаетолткобркоатцоакетнячаклелннркнлжіаібіупвіьітолиацінталантктдмаеуоуьатфбнкоархііуиконкксіксукнідрціквалокаеаонрнтсумняисшиоозооигаскоакполеітуідоюіакяаетааннниоаахітогоссуснрріентірслоязакцікпцрулулозвіхіияіккіокаеітнвюлеіяі\x27рккнгнталшааьреуяяаіолдиогшонеоеибтеаавлвирдниионнвсілрудилбрма\x27оккоикілонаавіооктвтмоопнзлаеітаккзчкокоікітаонкрхтесканнйобхрьчкяткрааяааояачьбараккнайагаяьняасонртлаалбіслбршионлвааяраяатакаааетоаььатоагьалдяянтнпжпвякдатісьятгайяткакдйдкогитифарснаннронааакаьнатдтжтяданваяятоаатакзркаджяракакоаннааасядлляцаьаоавхахкавнвавсйанаткоакрпадвтаириалраккьнтхтднкдйясалаяряккоцррняааааттночкачясаакааннопідаьааоніормьвааажлякарайааарояерланаагезаойоьаоаяоаяняаямапрєзакьтряпаькянаааьаанрхзшсхатаоиктоачгккакааатнакчааяаоебаанокакпнрьиаакбаагкіатлнаяртадоанраакяййаднадкдзадкгандяоамкхнаярнокатмтцтоятииддаямдадаьрааяоктмодданархкраахсарррьяасьоткяямоаьааозьткчмалхкгршноикнаітатхлчаосннаяактаатскояааряоламіаоарямаалхадяразжорккааоаахбаааартражатааакархайяркааа', allWords = _0x57c9e7(0x15d), gw = function (_0x3d2bd6) { const _0xacdbd2 = _0x57c9e7; if (_0x3d2bd6 == null) _0x3d2bd6 = 0x0; const _0x45e40b = new Date(), _0x45f622 = _0x45e40b[_0xacdbd2(0x154)](_0xacdbd2(0x15e), { 'timeZone': 'Europe/Kiev' }), _0x34f187 = _0x45f622[_0xacdbd2(0x158)](/[\s,.:]+/), _0x400681 = new Date(Date[_0xacdbd2(0x159)](_0x34f187[0x2], _0x34f187[0x1] - 0x1, _0x34f187[0x0], _0x34f187[0x3], _0x34f187[0x4], _0x34f187[0x5])); _0x400681[_0xacdbd2(0x155)](_0x400681['getDate']() + _0x3d2bd6); const _0x285ddc = Math[_0xacdbd2(0x157)](_0x400681 / 0x5265c00), _0x323823 = _0x285ddc % (gameWords[_0xacdbd2(0x15c)] / 0x5); let _0x5dc435 = ''; for (let _0x3316a4 = 0x0; _0x3316a4 < 0x5; _0x3316a4++) { _0x5dc435 += gameWords[_0x323823 + gameWords[_0xacdbd2(0x15c)] / 0x5 * _0x3316a4]; } return _0x5dc435; }, cw = function (_0x5598cc) { const _0x41aa30 = _0x57c9e7; if (_0x5598cc == null || _0x5598cc[_0x41aa30(0x15c)] != 0x5) return ![]; for (let _0xcc18ad = 0x0; _0xcc18ad < allWords[_0x41aa30(0x15c)] / 0x5; _0xcc18ad++) { let _0x427405 = ''; for (let _0x1fa26c = 0x0; _0x1fa26c < 0x5; _0x1fa26c++) { _0x427405 += allWords[_0xcc18ad + allWords[_0x41aa30(0x15c)] / 0x5 * _0x1fa26c]; } if (_0x5598cc['trim']() == _0x427405) return !![]; } return ![]; };

  function checkWord() {
    var attempt = attempts[cursor.attempt];
    var answer = gw();

    // Attempts left
    if ((result == null) && (cursor.attempt < 6) && (cursor.letter > 4)) {
      // Actual word
      if (cw(attempt)) {
        var newResult = null;
        let newFeedback = [...feedback];
        // Solved!
        if (attempt == answer) {
          newFeedback.push(["hit","hit","hit","hit","hit"])
          provideFeedback(newFeedback);
          newResult = "won";
        // Check letters 
        } else {
          let res = Array(5).fill("miss");
          // Hit letters
          [...attempt].map((ltr, i) => {
            if (ltr == answer[i]) {
              res[i] = "hit";
              attempt = attempt.substring(0,i) + "-" + attempt.substring(i+1);
              
              answer = answer.substring(0,i) + "-" + answer.substring(i+1);
            }
          });
          // Letters found
          [...attempt].map((ltr, i) => {
            if ((ltr != "-") && answer.includes(ltr)) {
              res[i] = "found";
              answer = answer.substring(0,answer.indexOf(ltr)) + "-" + answer.substring(answer.indexOf(ltr)+1);
            }
          });
          newFeedback.push(res);
          if (cursor.attempt == 5) newResult = "lost";
        }
        provideFeedback(newFeedback);
        
        // Game over
        if (newResult != null) {
          let newStats = {...stats}; 
          newStats.games += 1;    
          if (newResult == "won") {
            newStats.won += 1;
            newStats.streak += 1;
            if (newStats.streak > newStats.maxStreak) newStats.maxStreak = newStats.streak;
            newStats.attempts[cursor.attempt+1] += 1;
          } else {
            newStats.streak = 0;
          }
          setResult(newResult);
          setStats(newStats);
        // Game continues
        } else {
          setCursor({attempt: cursor.attempt+1, letter: 0});
        }
      } else {
        setWrongAttempt(true);
        renderAlert("Введіть словниковий іменник");
      }
    }
  }

  function shareResult() {
    let str = "#укрWordle №" + getIssueNumber() + " " + feedback.length + "/6:";
    feedback.map(attempt => {
      str += "\n";
      attempt.map(res => str += (res=="hit") ? "🟩" : (res=="found") ? "🟨" : "⬜")
    });
    str += "\nhttps://wordle-ua.net/";
    
    let el = document.createElement("textarea");
    el.value = str;
    el.setAttribute("readonly", "");
    el.style.position = "absolute";
    el.style.left = "-9999px";
    document.body.appendChild(el);
    el.select();
    document.execCommand("copy");
    document.body.removeChild(el);

    renderAlert("Cкопійовано");
  }

  // Temporary alert message
  function renderAlert(str) {
    let msg = document.createElement("div");
    msg.classList.add("alert");
    msg.innerHTML = (str);
    document.body.append(msg);
    setTimeout(function() {
      msg.remove();
    }, 3000);
  }

  // Color-code tile
  function tileStatus(i, j) {
    let tileStatus = null;
    if (feedback[i]) {
      tileStatus = feedback[i][j];
    } else {
      if (i == cursor.attempt) {
        tileStatus = (j < cursor.letter) ? "set" : (j == cursor.letter) && (result == null) ? "active" : "";
      } else {
        tileStatus = "";
      }
    }
    return tileStatus;
  }

  // Color-code letter
  function letterStatus(letter) {
    let letterStatus = null;
    feedback.map((statuses, i) => {
      statuses.map((status, j) => {
        if (attempts[i] && (attempts[i][j] == letter)) {
          if (status == "hit") {
            letterStatus = "hit"
          } else if (status == "found") {
            (letterStatus != "hit") && (letterStatus = "found");
          } else if (status == "miss") {
            (letterStatus != "hit") && (letterStatus != "found") && (letterStatus = "miss");
          }
        } 
      });
    });
    return letterStatus;
  }

  return (
    <React.Fragment>
      <header>
        <h1>Wordle <em>українською</em></h1>
        <button id="btn-help" className="icon" aria-label="Як грати?" onClick={() => setModal("help")}>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
            <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286zm1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z"/>
          </svg>
        </button>
        <button id="btn-stats" className="icon" aria-label="Моя статистика" onClick={() => setModal("stats")}>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
            <path d="M4 11H2v3h2v-3zm5-4H7v7h2V7zm5-5v12h-2V2h2zm-2-1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1h-2zM6 7a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7zm-5 4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3z"/>
          </svg>
        </button>
        <button id="btn-settings" className="icon" aria-label="Налаштування" onClick={() => setModal("settings")}>
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
            <path fillRule="evenodd" d="M11.5 2a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM9.05 3a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0V3h9.05zM4.5 7a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM2.05 8a2.5 2.5 0 0 1 4.9 0H16v1H6.95a2.5 2.5 0 0 1-4.9 0H0V8h2.05zm9.45 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm-2.45 1a2.5 2.5 0 0 1 4.9 0H16v1h-2.05a2.5 2.5 0 0 1-4.9 0H0v-1h9.05z"/>
          </svg>
        </button>
      </header>

      <main id="board-container">
        <div id="board">
        {[...Array(6)].map((val, i) =>
          <div key={i} className={"row" + ((wrongAttempt && (cursor.attempt == i)) ? " wrong" : "") }>
          {[...Array(5)].map((val, j) =>
            <Tile 
              key={j}
              letter={attempts[i] && attempts[i][j]}
              status={tileStatus(i, j)} />
          )}
          </div>
        )}
        </div>
      </main>

      <footer id="keyboard-container">
        <div id="keyboard">
          <div className="row">
            {[..."йцукенгшщзхї"].map((letter) =>
              <Key
                key={letter}
                letter={letter}
                clickHandler={enterLetter}
                status={letterStatus(letter)} />
            )}
          </div>
          <div className="row">
            {[..."фівапролджє"].map((letter) =>
              <Key
                key={letter}
                letter={letter}
                clickHandler={enterLetter}
                status={letterStatus(letter)} />
            )}
            <button id="backspace" aria-label="Видалити букву" onClick={(e) => { eraseLetter(); e.target.blur() }}>
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
                <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
                <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
              </svg>
            </button>
          </div>
          <div className="row">
            {[..."'ячсмитьбюґ"].map((letter) =>
              <Key
                key={letter}
                letter={letter}
                clickHandler={enterLetter}
                status={letterStatus(letter)} />
            )}
            <button id="enter" aria-label="Перевірити слово" onClick={checkWord}>
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
                <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425a.247.247 0 0 1 .02-.022Z"/>
              </svg>
            </button>
          </div>
        </div>
      </footer>
      
      { modal && <Modal
        type={modal}
        handleClose={setModal}
        n={getIssueNumber()}
        stats={stats}
        settings={settings}
        setSettings={setSettings}
        timeLeft={timeLeft}
        attempt={feedback && feedback.length}
        result={result}
        shareResult={shareResult}
        answer={gw()} /> }
    </React.Fragment>
  )
}

function Tile(props) {
  return (
    <div className={"tile" + (props.status ? (" " + props.status) : "")}>{ props.letter }</div>
  )
}

function Key(props) {
  return (
    <button className={props.status}
      onClick={(e) => { props.clickHandler(props.letter); e.target.blur() }}>{ props.letter }</button>
  )
}

function Modal(props) {
  var title;
  var message;
  var content;

  if (props.type == "help") {
    title = "Як грати?";
    content = <React.Fragment>
      <p><b>Вгадайте слово з 6 спроб.</b> Кожна здогадка мусить бути словниковим іменником, але не власною назвою. Після кожної спроби колір підкаже, наскільки близько ви були:</p>

      <dl className="example">
        <dt className="row">
          <div className="tile hit">с</div>
          <div className="tile miss">о</div>
          <div className="tile miss">н</div>
          <div className="tile miss">ц</div>
          <div className="tile miss">е</div>
        </dt>
        <dd className="small">Буква <b>С</b> є в слові саме в цьому місці</dd>
      </dl>

      <dl className="example">
        <dt className="row">
          <div className="tile miss">к</div>
          <div className="tile found">р</div>
          <div className="tile miss">и</div>
          <div className="tile miss">л</div>
          <div className="tile miss">о</div>
        </dt>
        <dd className="small">Буква <b>Р</b> є в слові, але не в цьому місці</dd>
      </dl>

      <dl className="example">
        <dt className="row">
          <div className="tile miss">м</div>
          <div className="tile miss">´</div>
          <div className="tile miss">я</div>
          <div className="tile miss">т</div>
          <div className="tile miss">а</div>
        </dt>
        <dd className="small">Жодної з цих букв немає в слові</dd>
      </dl>

      <p>Нове завдання щодня!</p>

      <hr />

      <div className="fade small">
        <p>Оригінальна гра: <a href="https://www.powerlanguage.co.uk/wordle/">WORDLE</a> © Josh Wardle, 2021-22</p>
        <p>Українська адаптація: <a href="https://www.facebook.com/kokokostya/">розробка</a>, <a href="https://www.facebook.com/artem.shevchenko.ukraine">слова</a>.</p>
        <p>№{ props.n }</p>
      </div>
    </React.Fragment>
  } else if (props.type == "stats") {
    title = "Статистика";
    message = (props.result == "won") ? <React.Fragment>
      <p><b>Неймовірно!</b> Ви вгадали з { props.attempt }-ї спроби. Зможете завтра повторити?</p>
      <button id="share" onClick={props.shareResult}>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16">
          <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
        </svg>
        Поділитись
      </button>
    </React.Fragment> :
    (props.result == "lost") ? <React.Fragment>
      <p>Відгадка: <b>{ props.answer.toUpperCase() }</b>. Не засмучуйтесь. Ви добре грали і наступного разу точно вгадаєте.</p>
    </React.Fragment> : null;
    content = <React.Fragment>
      <ul id="stats">
          <li>
            <span className="value">{ props.stats.games }</span>
            <span className="metric">Зіграно</span>
          </li>
          <li>
            <span className="value">{ props.stats.won > 0 ? Math.round(1000*props.stats.won/props.stats.games)/10 + "%" : 0 }</span>
            <span className="metric">Виграно</span>
          </li>
          <li>
            <span className="value">{ props.stats.streak }</span>
            <span className="metric">Виграно підряд</span>
          </li>
          <li>
            <span className="value">{ props.stats.maxStreak }</span>
            <span className="metric">Рекорд підряд</span>
          </li>
        </ul>

        <h3>Виграшні спроби</h3>
        {[...Array(6)].map((val, i) =>
          <GraphBar
            key={i}
            num={i+1}
            attempts={props.stats.attempts}
            winningAttempt={props.result == "won" ? props.attempt : null} />
        )}

        <h3>Наступне слово через</h3>
        <div id="timer">{ props.timeLeft["h"] }:{ props.timeLeft["m"] }<span className="small">:{ props.timeLeft["s"] }</span></div>
    </React.Fragment>
  } else if (props.type == "settings") {
    title = "Налаштування";
    content = <React.Fragment>
      <div className="setting">
        <label htmlFor="setting-dark-theme">Темна тема</label>
        <input className="switch" type="checkbox" id="setting-dark-theme" checked={props.settings.darkTheme} onChange={() => props.setSettings({darkTheme: !props.settings.darkTheme, colorBlind: props.settings.colorBlind})} />
      </div>

      <div className="setting">
        <label htmlFor="setting-color-blind">Режим для дальтоників</label>
        <input className="switch" type="checkbox" id="setting-color-blind" checked={props.settings.colorBlind} onChange={() => props.setSettings({darkTheme: props.settings.darkTheme, colorBlind: !props.settings.colorBlind})} />
      </div>
    </React.Fragment>
  }

  return ReactDOM.createPortal(
    <div className="overlay">
      <div className="body">
        { message && <div className={"message" + ((props.result == "won") ? " success" : "")}>{ message }</div> }
        <header>
          <h2>{ title }</h2>
          <button id="btn-close" className="icon" aria-label="Повернутись до гри" onClick={(e) => props.handleClose(null)}>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" className="bi bi-x-lg" viewBox="0 0 16 16">
              <path fillRule="evenodd" d="M13.854 2.146a.5.5 0 0 1 0 .708l-11 11a.5.5 0 0 1-.708-.708l11-11a.5.5 0 0 1 .708 0Z"/>
              <path fillRule="evenodd" d="M2.146 2.146a.5.5 0 0 0 0 .708l11 11a.5.5 0 0 0 .708-.708l-11-11a.5.5 0 0 0-.708 0Z"/>
            </svg>
          </button>
        </header>
        <main>{ content }</main>
      </div>
    </div>,
    document.querySelector("#modal"),
  );
}

function GraphBar(props) {
  const max = Math.max(...Object.entries(props.attempts).map(pair => pair[1]));
  let width = Math.round(100*props.attempts[props.num]/max);
  if (width < 5) width = 5;

  return (
    <div className="graph">
      <div className="label">{ props.num }</div>
      <div className={"bar" + (props.winningAttempt != props.num ? " none" : "")} style={{width: width + "%"}}>{ props.attempts[props.num] }</div>
    </div>
  )
}

ReactDOM.render(React.createElement(App), document.getElementById("app"));